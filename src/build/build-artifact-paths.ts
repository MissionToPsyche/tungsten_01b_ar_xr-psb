import * as fs from 'fs';
import * as path from 'node:path';

/**
 * This script is used to generate the artifact-paths.ts file.
 *
 * It reads all the artifact files and extracts the paths from the useGLTF.preload calls.
 */
const buildArtifactPaths = () => {
  const basePath = path.join('src', 'artifacts');
  const files = fs
    .readdirSync(basePath)
    .filter((fileName) => fileName.endsWith('.tsx'));
  const artifactPaths: Record<string, string> = {};

  files.forEach((fileName) => {
    const filePath = path.join(basePath, fileName);
    const content = fs.readFileSync(filePath, 'utf-8');
    if (!content.includes('useGLTF.preload')) return;
    const artifactName = fileName.replace('.tsx', '');

    const matches = content.match(/useGLTF\.preload\('(.*)'\)/g);
    if (!matches) return;

    matches.forEach((match) => {
      const captures = match.match(/useGLTF\.preload\('(.*)'\)/);
      if (!captures || captures.length < 2) return;
      artifactPaths[artifactName] = captures[1];
    });
  });

  const artifactPathsContent = `
  // Auto-generated by: ./src/build/build-artifact-paths.ts
  const artifactPaths = ${JSON.stringify(artifactPaths, null, 2)};
  export default artifactPaths;
  `;

  const artifactPathsFilePath = path.join(
    'src',
    'artifacts',
    'artifact-paths.ts'
  );
  fs.writeFileSync(artifactPathsFilePath, artifactPathsContent);
};

buildArtifactPaths();
