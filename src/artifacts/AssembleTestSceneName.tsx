/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/assets/models/assembly-test-scene-name.gltf -tT -o AssembleTestSceneName.tsx -r /assets/models 
Files: ./public/assets/models/assembly-test-scene-name.gltf [5.33KB] > assembly-test-scene-name-transformed.glb [44.84KB] (-741%)
Author: ajd6735 (https://sketchfab.com/ajd6735)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/assembly-test-scene-name-97775a53c8ae41118754f50b56145224
Title: Assembly-test-scene-name
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_6: THREE.Mesh;
  };
  materials: {
    Letters_Material: THREE.MeshStandardMaterial;
    Box_Material: THREE.MeshStandardMaterial;
  };
};

export function AssembleTestSceneName(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/assets/models/assemble-test-scene-name-transformed.glb'
  ) as GLTFResult;

  const minScaleFactor = 1.6;
  const maxScaleFactor = 1.8;
  const isMobile = window.innerWidth < 768;

  return (
    <group
      {...props}
      dispose={null}
      scale={isMobile ? minScaleFactor : maxScaleFactor}
      position={isMobile ? [-1.5, 14.5, -6] : [-1, 15.5, -6]}
    >
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.Letters_Material}
        position={[0.989, 0.048, 0]}
        scale={0.025}
      />
      <mesh
        geometry={nodes.Object_6.geometry}
        material={materials.Box_Material}
        position={[0.992, 0.394, -0.115]}
        scale={0.025}
      />
    </group>
  );
}

useGLTF.preload('/assets/models/assemble-test-scene-name-transformed.glb');
