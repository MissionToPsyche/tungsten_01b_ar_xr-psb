/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/assets/models/orbits_animated.gltf -tT -o Orbits.tsx -r /assets/models --keepgroups --keepmeshes 
Files: ./public/assets/models/orbits_animated.gltf [61.95MB] > orbits_animated-transformed.glb [7.76MB] (87%)
*/

import * as THREE from 'three';
import { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import FactsModalTrigger from '../facts/FactsModalTrigger';

type GLTFResult = GLTF & {
  nodes: {
    SolarPanelLeft1014: THREE.Mesh;
    SolarPanelLeft1014_1: THREE.Mesh;
    Cylinder001: THREE.Mesh;
    Cylinder001_1: THREE.Mesh;
    Cylinder001_2: THREE.Mesh;
    Cylinder001_3: THREE.Mesh;
    Cylinder001_4: THREE.Mesh;
    Cylinder001_5: THREE.Mesh;
    Cylinder005: THREE.Mesh;
    Cylinder005_1: THREE.Mesh;
    Cylinder005_2: THREE.Mesh;
    Cylinder005_3: THREE.Mesh;
    Cylinder005_4: THREE.Mesh;
    Cylinder005_5: THREE.Mesh;
    Cylinder003: THREE.Mesh;
    Cylinder003_1: THREE.Mesh;
    Cylinder003_2: THREE.Mesh;
    Cylinder003_3: THREE.Mesh;
    Cylinder003_4: THREE.Mesh;
    Cylinder003_5: THREE.Mesh;
    Cylinder004: THREE.Mesh;
    Cylinder004_1: THREE.Mesh;
    Cylinder004_2: THREE.Mesh;
    Cylinder004_3: THREE.Mesh;
    Cylinder004_4: THREE.Mesh;
    Cylinder004_5: THREE.Mesh;
    Torus: THREE.Mesh;
    Torus2: THREE.Mesh;
    Torus3: THREE.Mesh;
    Torus4: THREE.Mesh;
  };
  materials: {
    aluminium: THREE.MeshStandardMaterial;
    Panel_Material: THREE.MeshStandardMaterial;
    M_01___Default: THREE.MeshStandardMaterial;
    Thruster_Material: THREE.MeshStandardMaterial;
    SignalTransmMaterial: THREE.MeshStandardMaterial;
    FoilMaterial: THREE.MeshStandardMaterial;
    AlumFoilBack: THREE.MeshStandardMaterial;
  };
};

export function Orbits(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    '/assets/models/orbits_animated-transformed.glb'
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions.emptyOneCircle?.play();
    actions.emptyTwoCircle?.play();
    actions.emptyThreeCircle?.play();
    actions.emptyFourCircle?.play();
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Empty"
          position={[14, 0, 0]}
          rotation={[1.805, -0.064, 2.323]}
        >
          <group
            name="SolarPanelRight"
            rotation={[-1.396, 0, -Math.PI]}
            scale={[-0.005, -0.005, -0.003]}
          >
            <mesh
              name="SolarPanelLeft1014"
              geometry={nodes.SolarPanelLeft1014.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="SolarPanelLeft1014_1"
              geometry={nodes.SolarPanelLeft1014_1.geometry}
              material={materials.Panel_Material}
            />
          </group>

          <group
            name="orbiter"
            position={[0, -0.28, 0]}
            scale={[0.15, 0.005, 0.15]}
          >
            <mesh
              name="Cylinder001"
              geometry={nodes.Cylinder001.geometry}
              material={materials.M_01___Default}
            />
            <mesh
              name="Cylinder001_1"
              geometry={nodes.Cylinder001_1.geometry}
              material={materials.Thruster_Material}
            />
            <mesh
              name="Cylinder001_2"
              geometry={nodes.Cylinder001_2.geometry}
              material={materials.SignalTransmMaterial}
            />
            <mesh
              name="Cylinder001_3"
              geometry={nodes.Cylinder001_3.geometry}
              material={materials.FoilMaterial}
            />
            <mesh
              name="Cylinder001_4"
              geometry={nodes.Cylinder001_4.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="Cylinder001_5"
              geometry={nodes.Cylinder001_5.geometry}
              material={materials.AlumFoilBack}
            />
          </group>
        </group>
        <group
          name="Empty2"
          position={[7.442, -3.831, 7.442]}
          rotation={[-0.242, 0.96, -1.224]}
        >
          <group
            name="SolarPanelRight2"
            rotation={[-1.833, 0, -Math.PI]}
            scale={[-0.005, -0.005, -0.003]}
          >
            <mesh
              name="SolarPanelLeft1014"
              geometry={nodes.SolarPanelLeft1014.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="SolarPanelLeft1014_1"
              geometry={nodes.SolarPanelLeft1014_1.geometry}
              material={materials.Panel_Material}
            />
          </group>
          <group
            name="orbiter2"
            position={[0, -0.28, 0]}
            scale={[0.15, 0.005, 0.15]}
          >
            <mesh
              name="Cylinder005"
              geometry={nodes.Cylinder005.geometry}
              material={materials.M_01___Default}
            />
            <mesh
              name="Cylinder005_1"
              geometry={nodes.Cylinder005_1.geometry}
              material={materials.Thruster_Material}
            />
            <mesh
              name="Cylinder005_2"
              geometry={nodes.Cylinder005_2.geometry}
              material={materials.SignalTransmMaterial}
            />
            <mesh
              name="Cylinder005_3"
              geometry={nodes.Cylinder005_3.geometry}
              material={materials.FoilMaterial}
            />
            <mesh
              name="Cylinder005_4"
              geometry={nodes.Cylinder005_4.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="Cylinder005_5"
              geometry={nodes.Cylinder005_5.geometry}
              material={materials.AlumFoilBack}
            />
          </group>
        </group>
        <group
          name="Empty3"
          position={[4.95, 1, -4.95]}
          rotation={[-2.457, -0.659, 2.034]}
        >
          <group
            name="SolarPanel3"
            rotation={[Math.PI, 0, Math.PI]}
            scale={[-0.005, -0.005, -0.003]}
          >
            <mesh
              name="SolarPanelLeft1014"
              geometry={nodes.SolarPanelLeft1014.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="SolarPanelLeft1014_1"
              geometry={nodes.SolarPanelLeft1014_1.geometry}
              material={materials.Panel_Material}
            />
          </group>
          <group
            name="orbiter3"
            position={[0, -0.28, 0]}
            scale={[0.15, 0.005, 0.15]}
          >
            <mesh
              name="Cylinder003"
              geometry={nodes.Cylinder003.geometry}
              material={materials.M_01___Default}
            />
            <mesh
              name="Cylinder003_1"
              geometry={nodes.Cylinder003_1.geometry}
              material={materials.Thruster_Material}
            />
            <mesh
              name="Cylinder003_2"
              geometry={nodes.Cylinder003_2.geometry}
              material={materials.SignalTransmMaterial}
            />
            <mesh
              name="Cylinder003_3"
              geometry={nodes.Cylinder003_3.geometry}
              material={materials.FoilMaterial}
            />
            <mesh
              name="Cylinder003_4"
              geometry={nodes.Cylinder003_4.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="Cylinder003_5"
              geometry={nodes.Cylinder003_5.geometry}
              material={materials.AlumFoilBack}
            />
          </group>
        </group>
        <group
          name="Empty4"
          position={[-3.749, 1.775, -0.661]}
          rotation={[-2.892, -0.185, -0.959]}
        >
          <group
            name="SolarPanel4"
            rotation={[-Math.PI / 2, 0, -Math.PI]}
            scale={[-0.005, -0.005, -0.003]}
          >
            <mesh
              name="SolarPanelLeft1014"
              geometry={nodes.SolarPanelLeft1014.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="SolarPanelLeft1014_1"
              geometry={nodes.SolarPanelLeft1014_1.geometry}
              material={materials.Panel_Material}
            />
          </group>
          <group
            name="orbiter4"
            position={[0, -0.28, 0]}
            scale={[0.15, 0.005, 0.15]}
          >
            <mesh
              name="Cylinder004"
              geometry={nodes.Cylinder004.geometry}
              material={materials.M_01___Default}
            />
            <mesh
              name="Cylinder004_1"
              geometry={nodes.Cylinder004_1.geometry}
              material={materials.Thruster_Material}
            />
            <mesh
              name="Cylinder004_2"
              geometry={nodes.Cylinder004_2.geometry}
              material={materials.SignalTransmMaterial}
            />
            <mesh
              name="Cylinder004_3"
              geometry={nodes.Cylinder004_3.geometry}
              material={materials.FoilMaterial}
            />
            <mesh
              name="Cylinder004_4"
              geometry={nodes.Cylinder004_4.geometry}
              material={materials.aluminium}
            />
            <mesh
              name="Cylinder004_5"
              geometry={nodes.Cylinder004_5.geometry}
              material={materials.AlumFoilBack}
            />
          </group>
        </group>
        <FactsModalTrigger factName="psycheOrbitA">
          <mesh
            name="Torus"
            geometry={nodes.Torus.geometry}
            material={nodes.Torus.material}
            rotation={[0.175, 0, 0]}
            scale={[1.05, 18, 1.05]}
          />
        </FactsModalTrigger>
        <FactsModalTrigger factName="psycheOrbitB">
          <mesh
            name="Torus2"
            geometry={nodes.Torus2.geometry}
            material={nodes.Torus2.material}
            rotation={[0.475, 0.727, -0.33]}
            scale={[0.85, 18, 0.85]}
          />
        </FactsModalTrigger>
        <FactsModalTrigger factName="psycheOrbitC">
          <mesh
            name="Torus3"
            geometry={nodes.Torus3.geometry}
            material={nodes.Torus3.material}
            position={[0, 0.97, 0]}
            rotation={[Math.PI, Math.PI / 4, -2.618]}
            scale={[0.55, 18, 0.55]}
          />
        </FactsModalTrigger>
        <FactsModalTrigger factName="psycheOrbitD">
          <mesh
            name="Torus4"
            geometry={nodes.Torus4.geometry}
            material={nodes.Torus4.material}
            rotation={[-1.927, -1.103, 2.746]}
            scale={[0.35, 18, 0.35]}
          />
        </FactsModalTrigger>
      </group>
    </group>
  );
}

useGLTF.preload(
  '/assets/models/orbits_animated-transformed.glb'
);
