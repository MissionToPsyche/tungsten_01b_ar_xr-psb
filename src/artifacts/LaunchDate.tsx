/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/assets/models/launch-date.gltf -tT -o LaunchDate.tsx -r /assets/models
Files: ./public/assets/models/launch-date.gltf [4.36MB] > launch-date-transformed.glb [277.98KB] (94%)
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import degreesToRadians from '../common/utils/degrees-to-radians.ts';
import { useRef } from 'react';
import { Mesh } from 'three';
import { Select } from '@react-three/postprocessing';

type GLTFResult = GLTF & {
  nodes: {
    Mesh_Mesh_head_geo001_lambert2SG001: THREE.Mesh;
  };
  materials: {
    ['lambert2SG.001']: THREE.MeshStandardMaterial;
  };
};

export function LaunchDate({
  outline,
  ...props
}: JSX.IntrinsicElements['group'] & { outline?: boolean }) {
  const meshRef = useRef<Mesh>(null);
  const { nodes, materials } = useGLTF(
    '/assets/models/launch-date-transformed.glb'
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <Select enabled={outline}>
        <mesh
          ref={meshRef}
          geometry={nodes.Mesh_Mesh_head_geo001_lambert2SG001.geometry}
          material={materials['lambert2SG.001']}
          rotation={[degreesToRadians(-90), 0, 0]}
        />
      </Select>
    </group>
  );
}

useGLTF.preload('/assets/models/launch-date-transformed.glb');
