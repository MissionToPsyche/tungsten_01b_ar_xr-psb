/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/assets/models/orbit-orbiter.gltf -tT -o OrbitOrbiter.tsx -r /assets/models --keepgroups 
Files: ./public/assets/models/orbit-orbiter.gltf [35.12MB] > orbit-orbiter-transformed.glb [3.03MB] (91%)
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import filledVector from '../common/utils/filled-vector';

type GLTFResult = GLTF & {
  nodes: {
    SolarPanelLeft1014: THREE.Mesh;
    SolarPanelLeft1014_1: THREE.Mesh;
    Cylinder001: THREE.Mesh;
    Cylinder001_1: THREE.Mesh;
    Cylinder001_2: THREE.Mesh;
    Cylinder001_3: THREE.Mesh;
    Cylinder001_4: THREE.Mesh;
  };
  materials: {
    Panel_Material: THREE.MeshStandardMaterial;
    aluminium: THREE.MeshStandardMaterial;
    M_01___Default: THREE.MeshStandardMaterial;
    Thruster_Material: THREE.MeshStandardMaterial;
    SignalTransmMaterial: THREE.MeshStandardMaterial;
    FoilMaterial: THREE.MeshStandardMaterial;
    AlumFoilBack: THREE.MeshStandardMaterial;
  };
};

export function OrbitOrbiter(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/assets/models/orbit-orbiter-transformed.glb'
  ) as GLTFResult;

  const isMobile = window.innerWidth < 768;
  const minScaleFactor = filledVector(1);
  const maxScaleFactor = filledVector(1.8);
  return (
    <group
      {...props}
      dispose={null}
      scale={isMobile ? minScaleFactor : maxScaleFactor}
    >
      <group>
        <group
          position={[-0.069, 0.288, 0.012]}
          rotation={[-Math.PI, 0, 0]}
          scale={[-0.005, -0.005, -0.003]}
        >
          <mesh
            geometry={nodes.SolarPanelLeft1014.geometry}
            material={materials.Panel_Material}
          />
          <mesh
            geometry={nodes.SolarPanelLeft1014_1.geometry}
            material={materials.aluminium}
          />
        </group>
        <group
          position={[0, 0.3, 0.294]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={[0.15, 0.005, 0.15]}
        >
          <mesh
            geometry={nodes.Cylinder001.geometry}
            material={materials.M_01___Default}
          />
          <mesh
            geometry={nodes.Cylinder001_1.geometry}
            material={materials.Thruster_Material}
          />
          <mesh
            geometry={nodes.Cylinder001_2.geometry}
            material={materials.SignalTransmMaterial}
          />
          <mesh
            geometry={nodes.Cylinder001_3.geometry}
            material={materials.FoilMaterial}
          />
          <mesh
            geometry={nodes.Cylinder001_4.geometry}
            material={materials.AlumFoilBack}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/assets/models/orbit-orbiter-transformed.glb');
