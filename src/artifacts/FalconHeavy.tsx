/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 falcon-heavy.gltf -tT -o FalconHeavy.tsx -r /assets/models 
Files: falcon-heavy.gltf [188.67KB] > falcon-heavy-transformed.glb [7.93KB] (96%)
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import falconHeavyTransformed from '../assets/falcon-heavy-transformed.glb';

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: THREE.Mesh;
    Cylinder003: THREE.InstancedMesh;
  };
  materials: {
    Metal: THREE.MeshStandardMaterial;
  };
};

/**
 * A 3D falcon heavy component.
 * @param props for the object group.
 */
export function FalconHeavy(props: JSX.IntrinsicElements['group']) {
  // Load the GLTF model immediately
  const { nodes, materials } = useGLTF(falconHeavyTransformed) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials.Metal}
        castShadow
        receiveShadow
        position={[0, 0.66, 0]}
        scale={0.407}
      />
      <instancedMesh
        args={[nodes.Cylinder003.geometry, materials.Metal, 12]}
        instanceMatrix={nodes.Cylinder003.instanceMatrix}
        castShadow
        receiveShadow
      />
    </group>
  );
}

// useGLTF.preload(falconHeavyTransformed);
