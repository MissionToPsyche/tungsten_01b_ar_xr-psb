/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/assets/models/time-line.gltf -tT -o TimeLine.tsx -r /assets/models 
Files: ./public/assets/models/time-line.gltf [79.97KB] > time-line-transformed.glb [2.06MB] (-2474%)
Author: ajd6735 (https://sketchfab.com/ajd6735)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/time-line-b5fbdf533d62404aa783b17e72c73773
Title: Time-line
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Object_5: THREE.Mesh;
    Object_11: THREE.Mesh;
    Object_14: THREE.Mesh;
    Object_17: THREE.Mesh;
    Object_20: THREE.Mesh;
    Object_23: THREE.Mesh;
    Object_31: THREE.Mesh;
    Object_49: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
  };
};

export function TimeLine(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF(
    '/assets/models/time-line-transformed.glb'
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_5.geometry}
        material={materials.PaletteMaterial001}
        position={[-53.511, 24.235, 6.4]}
        rotation={[0, 0.306, 0]}
        scale={[0.025, 0.03, 0.025]}
      />
      <mesh
        geometry={nodes.Object_31.geometry}
        material={materials.PaletteMaterial002}
        position={[-48.945, 35.538, 6.451]}
        rotation={[-Math.PI / 2, 0, -0.502]}
        scale={0.032}
      />
    </group>
  );
}

useGLTF.preload('/assets/models/time-line-transformed.glb');
